plugins {
    id 'application'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
    id "org.flywaydb.flyway" version "10.0.0"
    id "com.github.spotbugs" version "6.0.5"
}

group = 'com.example'
version = 'prod'

java {
    sourceCompatibility = '21'
}


spotbugs {
    effort = com.github.spotbugs.snom.Effort.MAX
}

spotbugsMain {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

spotbugsTest {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}


application {
    // Specify the main class for your application
    mainClassName = 'com.example.roommate.RoomMateApplication'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'jakarta.validation:jakarta.validation-api'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    //  implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.flywaydb:flyway-core'

    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.8.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.thymeleaf:thymeleaf'
    testImplementation 'ognl:ognl'
    testImplementation 'com.tngtech.archunit:archunit-junit5-engine:1.2.1'

    runtimeOnly 'org.postgresql:postgresql:42.7.1'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // attach the report generation to the test task
}

jacocoTestReport {
//    dependsOn test // triggers the tests
    reports {
        xml.required = true
        html.required = true
        html.outputLocation  = file("${buildDir}/reports/jacoco/html")
    }
}